<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[[HEXO小技巧]在 hexo new 的时候自动用 VS Code 打开新建文章]]></title>
    <url>%2F2018%2F03%2F17%2Fhexo-auto-open-vscode%2F</url>
    <content type="text"><![CDATA[懒癌 hexo-blogger 的福音 / 吃我 Visual Studio Code 安利吔 安装 Visual Studio Code前往 Visual Studio Code 官网下载最新版本的 VS Code 安装包，并在安装时勾选 添加到 PATH 。同时，建议勾选其他三项（懒就要懒到底嘛qwq）。如图所示： 添加自动打开编辑器脚本在 博客根目录/scripts/ 下新建 AutoOpenEditor.js 文件（取其他名字也可以，不影响）（如果没有 scripts 目录则新建），并粘贴以下代码，保存。12345let spawn = require('hexo-util/lib/spawn');hexo.on('new', (data) =&gt; &#123; spawn('code', [hexo.base_dir, data.path]);&#125;); 这样，在你每次 hexo new 的时候，脚本就会自动帮你打开 VS Code 并切换到博客根目录顺带打开新建的 .md 文件啦。是不是又懒了一点呢qwq 水这一篇就很开心qwq PS：利用 Gulp 来压缩你的 Hexo 博客也更新了一种偷懒小技巧（在文末），还不快去看看？]]></content>
      <categories>
        <category>Hexo折腾</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
        <tag>教程</tag>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[A Guide to fix a security bug in Leancloud visitor counter]]></title>
    <url>%2F2018%2F03%2F16%2Flc-security-en%2F</url>
    <content type="text"><![CDATA[The Leancloud visitor counter plugin used in NexT has a big security bug, by which someone could change your visitor number easily and even add/delete records in your database. This bug is found by LEAFERx and confirmed by Ivan.Nginx. Related issue: #25 Related pr: #137 Related plugin: hexo-leancloud-counter-security This bug could only be fixed manually. Warning: All NexT sites using Leancloud visitor counter that are not fixed and other sites integrated this function by similiar ways are considered unsecurity. Please fix it as soon as possible. Chinese version guide is here For convience, this doc also includes the way to setup the plugin. If you have already done this, skip to Deploy web engine to avoid your data being changed illegally. Before you make the config, please upgrade your NexT version to v6.0.6 or greater. Please note the difference between site config file and theme config file Sign up to Leancloud and create an app Go to Leancloud website leancloud.cn and sign up to Leancloud. Then login. Click 1 to enter the console: Then click 1 to create an app: Type your app name in 1 in the pop up window(eg. “test”), then choose 2, which means developer’s plan, and then click 3 to create the app: Create Counter class and enable plugin in NexT Click 1(app name) to enter the app manage page: then click 1 to create a class for counter: Type Counter in the pop up window in 1, check 2, then click 3: Click 1 to enter the app setting, then click 2: Paste App ID and App Key to theme config file_config.yml like this: 1234567leancloud_visitors: enable: true app_id: &lt;&lt;your app id&gt;&gt; app_key: &lt;&lt;your app key&gt;&gt; # Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security security: true betterPerformance: false Set domain whitelist: Click1, then type your domain into 2(protocol, domain and port should be exactly the same): Deploy web engine to avoid your data being changed illegally Click 1 -&gt; 2 -&gt; 3 by order Click1: In the pop up window, click 1 to choose type Hook, then choosebeforeUpdate in 2, choose Counter in 3. Paste code below into 4, then click 5 to save it: 12345678var query = new AV.Query("Counter");if (request.object.updatedKeys.indexOf('time') !== -1) &#123; return query.get(request.object.id).then(function (obj) &#123; if (obj.get("time") + 1 !== request.object.get("time")) &#123; throw new AV.Cloud.Error('Invalid update!'); &#125; &#125;)&#125; Click 1 to deploy after the message in the red rect shows up: Click 1 in the pop up： Click 1 to close the pop up window after the message in the red rect shows up: Set access control for your database Open theme config file_config.yml, set leancloud_visitors: security to true: 1234567leancloud_visitors: enable: true app_id: &lt;&lt;your app id&gt;&gt; app_key: &lt;&lt;your app key&gt;&gt; # Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security security: true betterPerformance: false Explaination for betterPerformance:Because the Leancloud developer’s plan has limits in requst thread amount and running time, counter number may be very slow to load in some times. If set betterPerformance to true, counter number will be displayed quickly by assuming the request is accepted normally. Open cmd then switch to root path of site, type commands to install hexo-leancloud-counter-security plugin: 1npm install hexo-leancloud-counter-security --save Open site config file_config.yml, add those config: 123456leancloud_counter_security: enable_sync: true app_id: &lt;&lt;your app id&gt;&gt; app_key: &lt;&lt;your app key&gt; username: password: Type command: 1hexo lc-counter register &lt;&lt;username&gt;&gt; &lt;&lt;password&gt;&gt; or 1hexo lc-counter r &lt;&lt;username&gt;&gt; &lt;&lt;password&gt;&gt; Change &lt;&lt;username&gt;&gt; and &lt;&lt;password&gt;&gt; to your own username and password (no need to be the same as leancloud account). They will be used in the hexo deploying. Open site config file_config.yml, change &lt;&lt;username&gt;&gt; and &lt;&lt;password&gt;&gt;to those you set above:123456leancloud_counter_security: enable_sync: true app_id: &lt;&lt;your app id&gt;&gt; app_key: &lt;&lt;your app key&gt; username: &lt;&lt;your username&gt;&gt; # will be asked while deploying if be left blank password: &lt;&lt;your password&gt;&gt; # recommend to leave it blank for security, will be asked while deploying if be left blank Add the deployer in the deploy of site config file_config.yml: 123deploy: # other deployer - type: leancloud_counter_security_sync Return to the Leancloud console. Click 1 -&gt; 2, check if there is a record added in the _User (the img below is using username “admin” for example): Click 1 -&gt; 2 -&gt; 3 by order: Click 1(add_fields), then choose 2: click 1(create), then choose 2, type the username in 3, then click 4 -&gt; 5: Now your page should be similar to this img after finishing the step. Click 1(delete), then choose 2: Now the bug is fixed. Every time when you run hexo d, plugin will scan posts in the source/_posts and compare to the database, then add create records for those posts which are not list in the database. This procedure is done locally so that database can only be changed by you.]]></content>
      <categories>
        <category>Hexo折腾</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
        <tag>教程</tag>
        <tag>漏洞</tag>
        <tag>Leancloud</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[由于GitHub放弃支持TLS1.0/1.1而导致的Hexo部署失败解决方法]]></title>
    <url>%2F2018%2F02%2F26%2Fhexo-deploy-error-becauseof-git-credential%2F</url>
    <content type="text"><![CDATA[如果你最近在执行Hexo部署的时候遇到fatal:HttpRequestException encountered这个错误，这篇文章提供了解决方法。 起因昨天因为一些情况修改了一点博文，在部署Hexo的时候发现出现了莫名其妙的错误，类似下图：这个错误就很神奇，尤其是那个No error搞得我一脸懵逼…尝试良久无果，于是改用ssh方式提交，成功。与@Axton讨论过后，发现是gayhub最近停用了TLS1.0/1.1，然后巨硬底层太老不支持TLS1.2，于是https就提交不上去。感谢@Axton供图2333 于是跑去hexo-deployer-git提issue，被告知问题已经被巨硬解决了，尝试了一下没有毛病。不过我看目前仍很多人都还不知道解决方法，于是就打算写这么一篇短文。 解决方法最为推荐的解决方法就是直接下载最新版（v2.16.2）的git，其中已经集成了巨硬提供的解决方法。点我前往下载页面如果你不愿意更新git，你也可以单独安装巨硬提供的解决方法：在这个页面下载最新版Git Credential Manager for Windows并安装。完成安装后，问题就自动解决了。（安装完Git Credential Manager for Windows后请不要手贱卸载！！）（不然重装后也一直是错误！！鬼知道这是什么原因…）（然后下载了最新版git才解决问题） 相关issuehexojs/hexo#3043]]></content>
      <categories>
        <category>Hexo折腾</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
        <tag>教程</tag>
        <tag>git</tag>
        <tag>前端</tag>
        <tag>bug修复</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Leancloud访客统计插件重大安全漏洞修复指南]]></title>
    <url>%2F2018%2F02%2F11%2Flc-security%2F</url>
    <content type="text"><![CDATA[NexT主题使用的Leancloud访客统计插件存在重大安全漏洞，拥有不良企图的人利用该漏洞可随意更改访客数量或一定程度上增删数据库记录。该漏洞由我独立发现，并由Ivan.Nginx确认。 有关的issue：#25 有关的pr：#137 有关的插件：hexo-leancloud-counter-security 经过讨论后，我们认为该漏洞必须由使用者手动修复。本文给出了修复方法。注意：所有使用该插件而未经修复的NexT站点或使用类似方法集成Leancloud访客统计功能的站点都被认为是不安全的，请尽快修复。 For International Users:This post is a guide to fix a serious security bug in Leancloud visitor counter, which is found by me and confirmed by Ivan.Nginx.Someone could use this bug to change your visitor number easily and even add/delete records in your database.This bug could only be fixed manually. related issue: #25 related pr: #137 related plugin: hexo-leancloud-counter-security Warning: All NexT sites using Leancloud visitor counter that are not fixed and other sites integrated this function by similiar ways are considered unsecurity. Please fix it as soon as possible!English version guide is under translating and will be released in few days.2018.3.16: English version guide is here 为方便起见，本文将复述从头开始配置Leancloud访客统计插件的过程。本文部分内容参考自Doublemine的为NexT主题添加文章阅读量统计功能。对于已经完成该部分配置的用户，请自行对照本文步骤进行修复。 在配置前，请升级NexT至v6.0.5以上。2018.2.26：目前NexTv6.0.5已经更新，但相关pr仍在讨论中。预计该漏洞将在v6.0.6修复注：在本文发布时相关pull-request还在review当中，NexTv6.0.5仍未更新，请自行合并pr或按文末不更新主题的方法修复该漏洞。2018.3.16：NexTv6.0.6已更新，该修复插件作为beta功能暂时添加，默认security选项为false，预计于v6.0.7正式添加。 在配置过程中请注意博客配置文件和主题配置文件的区别。 注册Leancloud并创建应用 首先，前往Leancloud官网leancloud.cn进行注册，并登陆。 然后点击图示1处，进入控制台： 接着，点击图示1处，创建应用： 在弹出窗口1处输入应用名称（可随意输入，可更改，为演示方便取名为test），并选择2处“开发版”，然后点击3处创建： 到这里应用创建完成。 建立Counter类并在NexT中启用插件 点击1处应用名称进入应用管理界面： 如图，点击侧边栏1处创建Class： 在弹出窗口1处填入Counter，勾选2处无限制，并点击3处创建Class： 此时类已创建完成。接下来点击图示1处进入设置，然后点击2处进入应用Key： 粘贴App ID和App Key到NexT主题配置文件_config.yml对应位置。此时配置文件应如下： 1234leancloud_visitors: enable: true app_id: &lt;&lt;your app id&gt;&gt; app_key: &lt;&lt;your app key&gt;&gt; 设置Web安全域名确保域名调用安全。点击1处进入安全中心，然后在2处填写自己博客对应的域名（注意协议、域名和端口号需严格一致）： 到这里内容均与Doublemine的为NexT主题添加文章阅读量统计功能这篇文章相同，只不过截图为新版的Leancloud的界面。 部署云引擎以保证访客数量不被随意篡改 点击左侧1处云引擎，然后点击2处部署，再点击3处在线编辑： 点击1处创建函数： 在弹出窗口选择1处Hook类型，然后2处选择beforeUpdate，3处选择刚才建立的Counter类。在4中粘贴下方代码后，点5处保存。 12345678var query = new AV.Query("Counter");if (request.object.updatedKeys.indexOf('time') !== -1) &#123; return query.get(request.object.id).then(function (obj) &#123; if (obj.get("time") + 1 !== request.object.get("time")) &#123; throw new AV.Cloud.Error('Invalid update!'); &#125; &#125;)&#125; 如图所示： 点击保存后应出现类似红框处函数。此时点击1处部署： 在弹出窗口点击1处部署： 等待出现红框处的成功部署信息后，点击1处关闭： 至此云引擎已成功部署，任何非法的访客数量更改请求都将失败。 进一步设置权限（可选，建议设置） 打开NexT主题配置文件_config.yml，将leancloud_visitors下的security设置为true（如没有则新增）： 1234567leancloud_visitors: enable: true app_id: &lt;&lt;your app id&gt;&gt; app_key: &lt;&lt;your app key&gt;&gt; # Dependencies: https://github.com/theme-next/hexo-leancloud-counter-security security: true betterPerformance: false 对betterPerformance选项的说明：由于Leancloud免费版的云引擎存在请求线程数和运行时间限制以及休眠机制，很多时候访客数量加载会很慢。如果设置betterPerformance为true，则网页则会在提交请求之前直接显示访客人数为查询到的人数+1，以增加用户体验。 打开博客配置文件_config.yml，新增以下配置： 123456leancloud_counter_security: enable_sync: true app_id: &lt;&lt;your app id&gt;&gt; app_key: &lt;&lt;your app key&gt; username: password: 打开cmd并切换至博客根目录，键入以下命令以安装hexo-leancloud-counter-security插件： 1npm install hexo-leancloud-counter-security --save 在相同目录键入以下命令： 1hexo lc-counter register &lt;&lt;username&gt;&gt; &lt;&lt;password&gt;&gt; 或 1hexo lc-counter r &lt;&lt;username&gt;&gt; &lt;&lt;password&gt;&gt; 将&lt;&lt;username&gt;&gt;和&lt;&lt;password&gt;&gt;替换为你自己的用户名和密码（不必与leancloud的账号）相同。此用户名和密码将在hexo部署时使用。 打开博客配置文件_config.yml，将&lt;&lt;username&gt;&gt;和&lt;&lt;password&gt;&gt;替换为你刚刚设置的用户名和密码： 123456leancloud_counter_security: enable_sync: true app_id: &lt;&lt;your app id&gt;&gt; app_key: &lt;&lt;your app key&gt; username: &lt;&lt;your username&gt;&gt; #如留空则将在部署时询问 password: &lt;&lt;your password&gt;&gt; #建议留空以保证安全性，如留空则将在部署时询问 在博客配置文件_config.yml的deploy下添加项： 123deploy: # other deployer - type: leancloud_counter_security_sync 返回Leancloud控制台的应用内。依次点击1 2，检查_User表中是否出现一条记录（图示以用户名为admin为例）： 点击1处进入Counter表，依次点击2 3，打开权限设置： 点击1add_fields后选择2指定用户， 并将下两栏留空： 点击1create后选择2指定用户， 在3处键入用户名，点击4处后点击5处添加：完成此步操作后，界面应与图示类似： 点击1delete后选择2指定用户， 并将下两栏留空： 至此权限已设置完成，数据库记录只能在本地增删。每次运行hexo d部署的时候，插件都会扫描本地source/_posts下的文章并与数据库对比，然后在数据库创建没有录入数据库的文章记录。如果在博客配置文件中留空username或password，则在部署过程中程序会要求输入。 手动修改lean-analytics-swig的方法（不建议）不愿更新NexT主题的用户可使用此方法保证插件正常使用。强烈建议更新NexT至v6.0.5以上。打开\layout\_third-party\analytics\lean-analytics.swig文件，替换为以下内容：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114&#123;% if theme.leancloud_visitors.enable %&#125; &#123;# custom analytics part create by xiamo; edited by LEAFERx #&#125; &lt;script src=&quot;https://cdn1.lncld.net/static/js/av-core-mini-0.6.4.js&quot;&gt;&lt;/script&gt; &lt;script&gt;AV.initialize(&quot;&#123;&#123;theme.leancloud_visitors.app_id&#125;&#125;&quot;, &quot;&#123;&#123;theme.leancloud_visitors.app_key&#125;&#125;&quot;);&lt;/script&gt; &lt;script&gt; function showTime(Counter) &#123; var query = new AV.Query(Counter); var entries = []; var $visitors = $(&quot;.leancloud_visitors&quot;); $visitors.each(function () &#123; entries.push( $(this).attr(&quot;id&quot;).trim() ); &#125;); query.containedIn(&apos;url&apos;, entries); query.find() .done(function (results) &#123; var COUNT_CONTAINER_REF = &apos;.leancloud-visitors-count&apos;; if (results.length === 0) &#123; $visitors.find(COUNT_CONTAINER_REF).text(0); return; &#125; for (var i = 0; i &lt; results.length; i++) &#123; var item = results[i]; var url = item.get(&apos;url&apos;); var time = item.get(&apos;time&apos;); var element = document.getElementById(url); $(element).find(COUNT_CONTAINER_REF).text(time); &#125; for(var i = 0; i &lt; entries.length; i++) &#123; var url = entries[i]; var element = document.getElementById(url); var countSpan = $(element).find(COUNT_CONTAINER_REF); if( countSpan.text() == &apos;&apos;) &#123; countSpan.text(0); &#125; &#125; &#125;) .fail(function (object, error) &#123; console.log(&quot;Error: &quot; + error.code + &quot; &quot; + error.message); &#125;); &#125; function addCount(Counter) &#123; var $visitors = $(&quot;.leancloud_visitors&quot;); var url = $visitors.attr(&apos;id&apos;).trim(); var title = $visitors.attr(&apos;data-flag-title&apos;).trim(); var query = new AV.Query(Counter); query.equalTo(&quot;url&quot;, url); query.find(&#123; success: function(results) &#123; if (results.length &gt; 0) &#123; var counter = results[0]; counter.fetchWhenSave(true); counter.increment(&quot;time&quot;); counter.save(null, &#123; success: function(counter) &#123; var $element = $(document.getElementById(url)); $element.find(&apos;.leancloud-visitors-count&apos;).text(counter.get(&apos;time&apos;)); &#125;, error: function(counter, error) &#123; console.log(&apos;Failed to save Visitor num, with error message: &apos; + error.message); &#125; &#125;); &#125; else &#123; &#123;% if theme.leancloud_visitors.security %&#125; var $element = $(document.getElementById(url)); $element.find(&apos;.leancloud-visitors-count&apos;).text(&apos;Counter not initialized! See more at console err msg.&apos;); console.error(&apos;ATTENTION! LeanCloud counter has security bug, for solve it see here: https://github.com/theme-next/hexo-leancloud-counter-security. \n If you see this message, you must have set the security config to true but not install the plugin.&apos;); &#123;% else %&#125; var newcounter = new Counter(); /* Set ACL */ var acl = new AV.ACL(); acl.setPublicReadAccess(true); acl.setPublicWriteAccess(true); newcounter.setACL(acl); /* End Set ACL */ newcounter.set(&quot;title&quot;, title); newcounter.set(&quot;url&quot;, url); newcounter.set(&quot;time&quot;, 1); newcounter.save(null, &#123; success: function(newcounter) &#123; var $element = $(document.getElementById(url)); $element.find(&apos;.leancloud-visitors-count&apos;).text(newcounter.get(&apos;time&apos;)); &#125;, error: function(newcounter, error) &#123; console.log(&apos;Failed to create&apos;); &#125; &#125;); &#123;% endif %&#125; &#125; &#125;, error: function(error) &#123; console.log(&apos;Error:&apos; + error.code + &quot; &quot; + error.message); &#125; &#125;); &#125; $(function() &#123; var Counter = AV.Object.extend(&quot;Counter&quot;); if ($(&apos;.leancloud_visitors&apos;).length == 1) &#123; addCount(Counter); &#125; else if ($(&apos;.post-title-link&apos;).length &gt; 1) &#123; showTime(Counter); &#125; &#125;); &lt;/script&gt;&#123;% endif %&#125;]]></content>
      <categories>
        <category>Hexo折腾</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
        <tag>教程</tag>
        <tag>漏洞</tag>
        <tag>Leancloud</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[有关幻觉 有关和真实的纠葛]]></title>
    <url>%2F2018%2F01%2F21%2Fillusion-and-more%2F</url>
    <content type="text"><![CDATA[我不是在谈论，我是在诘问。 你记得你的床头柜上放有一束花。清清楚楚，这束花在脑海中有画面。可是你突然觉得不对，不知道为什么，就是，不对。说不上来，一股难言的恐惧攫住了你。摸索着起身，你向左偏头，没有。没有。哦，是梦。 还是现在才是梦。花的每一分褶皱，每一条脉络，都不自觉地在你的脑海里呼啸。你可以信誓旦旦。因为太真实。一个被妄图挑战的问题：究竟是“真实”在抗拒着真实，还是真实在抗拒着“真实”？ 类似的。你如何判断，你正在看的这些文字，太过真实而显得虚假。你怎么知道你醒过来了。 究竟是真实，还是大脑的自动补全。究竟什么是真实。可触摸，可被感知，可被标准模型的拉格朗日量描述。是吗？ 缸中的大脑问题。甚至是缸中的电脑问题。你所运行的思想，是否被编程。不是说被控制着，是被编程。逻辑电路般，输入与输出的精准对应。对你是黑盒，对缸外之人，内部过程可编程。电解液才是灵魂。 伪随机数。 半夜惊醒时是最容易迷茫的时刻。究竟是突然醒来，突然睡去，突然入梦，突然下一章。还是早已确定好的cycle。但我坚定地知道，盗梦空间中的陀螺，一定是虚假。 每个人都有自己的陀螺，籍此判断虚实。往往是最后的倚仗。或者说是防线吧。然而其实只是不愿承认的心理安慰罢了。 陀螺是受控的。重力控制陀螺，世界控制重力。你控制世界，缸外的人控制你。明白吗？ 虚假的防线，可以轻易跨越的马奇诺。奇怪的静坐战争。静待亡国后再自由运动。 我不想在这里谈论，有关存在，有关所谓的物质性的、可受相互作用的真实。我只是诘问，有关幻觉的纠葛。 往往，你会发现，你所倚仗的“真实”，总是充斥着象征性。奇怪的仪式感，与应许之地之物链接。但数据流究竟是单向还是双向，不得而知。 有时是对鲜血的渴望，是借生命力慰藉真实性。有时是疼痛，从麻木的挤压中挣得半点呼吸的空间。 但是你在害怕，如果面向了错误的对象。如果你倾注的是虚假，而将真实咀嚼。如果。如果你明白纠葛。所以你在逃避开始。 空有全身愤懑而无可击之物。气血逆行，叫你五内如焚。 我不是在谈论，我是在诘问。 希望你能彻底迷失于此。 一个夜里醒来的剑士和他的九十九里冰原。]]></content>
  </entry>
  <entry>
    <title><![CDATA[2018年1月站点更新]]></title>
    <url>%2F2018%2F01%2F13%2FSiteUpdate201801%2F</url>
    <content type="text"><![CDATA[前一段时间因为沉迷彩虹六号全境封锁（划掉）（算了不划了），博客持续长草然后最近终于想起来 就更新了一下主题（其实书单是一直一直在更新的qwqqq）（其实主要是CloudFlare访问实在太慢了…就倒腾了一下LeanCloud把图片扔在上面 这样终于访问速度能忍受了）大概等成年之后就去备个案 然后就能全站启用七牛CDN了 这样应该会快很多 嗷 所以这是一篇十分十分草率的文章本来想写点近况的 可是懒qwq那就假装《新年记杂》也算在内吧 那那那顺便加一下steam呀qwq id：LEAFERx唯一的 NexT主题已更新至6.0.1感谢Ivan.Nginx和其他人的贡献 目前NexT主题6.0.1版本已经正式放出话说我的博客被挂在了README上了诶嘿嘿 还有名字也写在了contributor里1w+stars的项目 赚翻了赚翻了 图片和js库等部分静态资源临时托管至LeanCloud和staticfile.org上为什么说临时是因为现在LeanCloud上文件都是手动上传粘贴链接的，十分不方便，以后肯定要换本来打算用七牛CDN的，可是要备案，那就只能等到成年了orz 加入Pace.js页面加载进度条从现在开始页面加载就有进度条动画了，不会就卡在哪里，用户体验大概会好很多吧 加入站点和文章字数统计虽然这个插件连代码字数都统计了进去造成一种写了很多字的错觉，但是看起来爽啊qwq 其他细节性修改还有些啥呢emmmm记不得了那就假装有点细节上的修改好了 好 这篇草率的文章就让它结束吧另外 1336大概最近会更新一下可以去看看 也欢迎投稿wqq上或者邮箱上找我就好]]></content>
      <categories>
        <category>博客通知</category>
        <category>更新</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[新年记杂]]></title>
    <url>%2F2018%2F01%2F11%2Fwrite-for-2018%2F</url>
    <content type="text"><![CDATA[本文于2018年1月1日首发于公众号Y92170号星星号的主人是一位很厉（la）害（ji）的小姐姐 欢迎大家关注qwq本来不打算发在这里的 毕竟是技术博客嘛但是……随便了qwq说不定有打赏呢 记得写过一篇平安夜记杂，尽是些不成文的语句。回忆跌跌撞撞破门而入。五年。五年，数以千记的日子，多少个五年。 又是一年元旦，扳扳手指，也已经数不过来了。乱，实在是乱。乱到很多回忆自动被揉进幻觉，还是幻觉里面掺杂着一点回忆。不知道，不知道。楼去而人空。 2017，with chaos an’ anxiety。恍恍惚惚地，恍恍惚惚地，晃过去了。留下了多少？问自己。不知道，不知道。茶走而人凉。大脑在嗡嗡作响，是机械硬盘的声音。是自动地在删除些什么，又是自动地在插入着什么。不知道，不知道。只有脚本才知道。 在写什么，不知道，迷茫，反正是记杂，那就杂。那就先摸摸看到这里的你吧w那也请你暂且放一下，看看今天的月亮。请你含情脉脉地看看她，然后告诉我圆不圆，好吗？这很重要。 在你看月亮的时候，让我偷偷地溜走一段吧。我对月亮这个意象总是情有独钟。不知道，不知道。矛盾的美。鲁迅的“直刺着天空中圆满的月亮，使月亮窘得发白。”她窘得发白，我爱她，因为她的另一面是深沉的黑。 回来了吧，告诉我，圆不圆。这很重要。我的膝盖上枕着八斤重的电脑，好疼。我在等你回话。 让我们来谈一点严肃的吧。 生而为人，真是对不起呀。生活对于那些想要前行的人，真是太太太太刻薄了。不是吗？你只要停下，她也会停下。月亮跟着你走，月亮一样。但你不能停下呀。停下了，就就真的停下了。 但是呀。但是。但是。还有六七十年七八十年好活。不是吗？那就把其中的几年送给生活当作谢礼。谢谢她的刻薄，尽管你不想要。 鸡汤，对吗。也是。你为什么就这么不屑呢。你有什么资格，可以看到这里呢。你是谁呢。 哈，开玩笑的啦。你还没有回答我月亮到底圆不圆呀。 啊不行。电脑好重。让我趴着写一会儿。 那就说点甜的吧。 “包产到户”真好呀。别人家的。 呐。如果你可以忍受的了我的混乱。读到了这里。我想对你说。对，就是对你说，不要往后看啦。对你说：喜欢你，绝非一言一语，一朝一夕。喜欢你，就想让所有的，所有的雨都落向你。喜欢你，想让樱花，让粉红色在你身上燃起。喜欢你，让氢原子被自由电子捉去。 但你喜欢空虚中的暗夜啊，鲁迅所说的，盾牌后的空虚中的暗夜。所以，所以所以啊，趴着好难受，让我起来缓一缓。 呐，薛定谔被我的猫挠死啦。“正是子夜时分。雨水敲打着窗户。不是子夜。没有下雨。”来自塞缪尔·贝克特的《莫洛伊》。嘿，我要把它送给你。 甜的说完啦，让我们继续混乱一点。最近的一个月，过得十分十分文科生。《古代汉语常识》《鲁迅选集》《文学阅读指南》《诗的八堂课》你知道吗，在古代，“睡觉”解作“睡醒”所以很晚啦，快去睡觉，晚安。 w 好的嘛，知道你不想睡。那么，人为什么而活呢？你知道吗。告诉我好吗。这也很重要。不过还是月亮圆不圆更重要一点。置死地而后生，至死地而后不生吧。月亮噎住了我，喝一杯黑夜润润喉。 吾辈皆如蚁。仅为美如神。顾城，顾城。 可是大火来了。会夺走一切的大火来了。滚滚黑烟中，数不尽的幻觉肆意掠夺。麻木而又冰冷，僵硬和悲伤在攻城掠地。 或许每一个人都有这样的念头：为什么不是我？ 对吗。 好，戛然而止吧。 被2017的末尾杀死的你。2018，新年，我要祝你不快乐。 傻子，月亮圆吗？新年快乐呀。 别管2017了。2018快乐。别管2018会不会快乐。先快乐再说。 困顿、不自知一个活着的人作于年末的夜空中 另附上一些不成文的词句望不要嫌弃 云淡风轻还是波澜不惊活还是死淡漠 淡漠 没有仙人掌的沙漠转瞬即逝的回忆都会被雕刻而幻觉总是自动闯入流淌着的灵魂 太沉伯努利方程守恒 却总是熵增活着就是氧化混乱 混乱 分子被拆散消散 消散缸中大脑 怕不是缸中电脑信息 信息 外界刺激内部过程可编程电解液才是灵魂Do androids dream of electric sheep？从灰色爬上黑色还是从黑色掉入灰暗那就割掉自己的左耳吧剪断反馈的路线 剪断闭环一劈两半莫比乌斯环然后掩埋掩埋庞贝和锡安宇宙终将变成沙滩 最后的最后衷心地祝愿胡太伟老师新年快乐愿天堂再无病痛]]></content>
  </entry>
  <entry>
    <title><![CDATA[2017年6月全站重大更新]]></title>
    <url>%2F2017%2F06%2F17%2FSiteUpdate201706%2F</url>
    <content type="text"><![CDATA[新域名leaferx.online已投入使用手一抖就花了5块钱买了个新域名orz 不过至少比leaferx.github.io好一点qwqgithub不能挂SSL证书是真的麻烦 最后只能用CloudFlare来反代一下CloudFlare是真的良心 不仅搞定了SSL而且能自动续期（虽然是公用SSL证书） 还有CDN加成（虽然都是美国节点）和安防（虽然对Github Pages并没有什么卵用） 甚至还可以做到全站http直接301到https 以及增加了网站统计功能 简直Github Pages最佳伴侣 最重要是的这些还都免费 所以忍不住打个广告qwq 不过对墙内的朋友们就不太友好了…Github和CloudFlare各种被半墙…有时间得弄下国内CDN换了域名百度那边瞬间爆炸 本就不多的索引量瞬间清零 不过最近并没有什么SEO的想法而且百度站长这个工具实在太难用了 各种通不过验证 简直毒 于是更没有兴趣了 由于全站访客人数统计用的是不蒜子 所以更换域名后4000+的人数被清零了 要重新开始所以请大家来后多刷新几下再走啊qwqqqqqqqqqqqq 评论系统已更换为LiveRe今年多说停止服务了 这么好的一个社会化评论系统彻底归为历史于是一直在找多说的代替品然而Disqus被墙 网易云更贴和搜狐畅言实在太丑…前段时间一直在用Gitment过渡 为此我还发了个PRGitment好是好 但是只支持Github账户 面向群体有些小众 而且在移动端貌似还有奇奇怪怪的问题 于是还是琢磨着要换一个然后在看到livere的时候就立刻拍板 就是它了（虽然中文名来必力真的很蠢而且总是让我想起来必堡……）支持Github、QQ、微信登录 所以少年不如评论一发造成这个博客似乎有人来的假象？？？ NexT主题已更新至5.1.1由于当年年少无知修改主题的时候都是直接修改 并没有用git 所以升级只能手动合并 特别麻烦这里安利一个用来比较和合并文件和文件夹的软件 Beyond Compare 超级好用当然 由于是手动合并 免不了有点疏漏 如果出现了bug请和我联系或者在底下评论 谢谢w 文章底部加入版权信息如果没有特殊说明 本站所有文章均采用 CC BY-NC-SA 4.0 CN 许可协议顺便求个友链ww 开启Scroll Percent功能在返回顶部按钮上加入了阅读进度 开启Save Scroll功能每篇文章的阅读进度都会写入cookies 这样等你返回的时候就能从你退出的地方读起啦 禁用底部点击小心心功能出于代码整洁度和实用性考虑 该功能已被禁用不过最近在构思一个可以统计点赞数量的tag 如果写出来了会写篇文章介绍 其他细节性改善如禁用ScrolltoMore功能、解决sidebar内滚动功能（虽然暂时还用不到）等]]></content>
      <categories>
        <category>博客通知</category>
        <category>更新</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[利用 Gulp 来压缩你的 Hexo 博客]]></title>
    <url>%2F2017%2F06%2F16%2Fuse-gulp-to-minimize%2F</url>
    <content type="text"><![CDATA[这篇文章介绍了如何利用 Gulp 来压缩你的 Hexo 博客的静态文件（ html / css / js ），达到提高访问速度的目的。 这篇博文的大部分内容其实是网上抄来的 链接因为忘记了所以没法放 orz写这篇博文呢主要是因为最近把 NexT 升级了 v5.1.1 里面有些 js 用了 ES6 的语法 但 gulp-uglify 并不支持 ES6于是花了点时间看了下 Gulp 的文档 用 gulp-babel 把 ES6 转成 ES5 这样 uglify 就可以用啦（发现自己不喜欢打标点orz） Gulp简介gulp.js 是一种基于流的，代码优于配置的新一代构建工具。具体前往官网啦反正是一个基于 node 的用于自动化的工具，和 Grunt 比较类似，不过亮点是 流 和 写代码 ，所以会比 Grunt 快一点。 准备环境首先安装 Gulp 1npm install gulp -g 然后 cd 到博客的根目录安装压缩静态文件要用的依赖包 1npm install gulp-minify-css gulp-babel gulp-uglify gulp-htmlmin gulp-htmlclean --save-dev （这里提倡使用 cnpm）2018.03.17：辣鸡 cnpm 装的包各种权限问题 不推荐了哼等有空写写如何优雅地在国内使用 npm 好了 w 创建gulpfile.js在博客的根目录创建文件 gulpfile.js然后粘贴代码 123456789101112131415161718192021222324252627282930313233var gulp = require('gulp');var minifycss = require('gulp-minify-css');var babel = require('gulp-babel');var uglify = require('gulp-uglify');var htmlmin = require('gulp-htmlmin');var htmlclean = require('gulp-htmlclean');gulp.task('minify-css', function () &#123; return gulp.src('./public/**/*.css') .pipe(minifycss()) .pipe(gulp.dest('./public'));&#125;);gulp.task('minify-html', function () &#123; return gulp.src('./public/**/*.html') .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, &#125;)) .pipe(gulp.dest('./public'))&#125;);gulp.task('minify-js', function () &#123; return gulp.src(['./public/**/*.js', '!./public/**/*.min.js']) .pipe(babel(&#123; presets: ['es2015'] &#125;)) .pipe(uglify()) .pipe(gulp.dest('./public'));&#125;);gulp.task('default', ['minify-html', 'minify-css', 'minify-js']); 注意gulp-babel 只能转换如箭头函数等一部分 ES6 的新特性 对 import 无能为力 如果需要压缩含有 import 特性的代码 需要使用 webpack 或者 browserify 等工具 具体教程网上有 我因为用不到也就没仔细研究 压缩方法在 hexo g 之后在 cmd 里敲入 gulp 回车就可以啦推荐姿势： 1hexo cl &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d gulp运行截图 gulp运行前后比较 更为推（tou）荐（lan）的姿势2018.03.17更新打开博客根目录的 package.json ，在 &quot;scripts&quot; 项增加一个 &quot;publish&quot; 命令： 123456789&#123; //... "scripts": &#123; //... "publish": "hexo cl &amp;&amp; hexo g &amp;&amp; gulp &amp;&amp; hexo d", //... &#125; //...&#125; 然后每次需要部署的时候只要运行下面命令就可以啦。 1npm run publish 省了 20 个字符呢 w]]></content>
      <categories>
        <category>Hexo折腾</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
        <tag>教程</tag>
        <tag>前端</tag>
        <tag>Gulp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MiNLabSys搭建和各种坑]]></title>
    <url>%2F2017%2F06%2F06%2FMiNLabSys%2F</url>
    <content type="text"><![CDATA[MiNLabSys是宁波中学创客空间实验室系统的简称该系统目前已实现中央服务器和门禁系统的部分功能（虽然完成度很低orz）介绍和代码请移步GitHub：MakersInNingZhong/MiNLabSys-ServerMakersInNingZhong/MiNLabSys-Door 本文主要着重于搭建该系统时遇到的各种坑 好了按惯例先扯上一会儿 跳过就好w好久不见 我（大概）来月更了orzzz临近期末事情越来越多 各种比赛和社团要收尾 根本没时间刷SICP和习题更何况我又入了C++ Premier Plus的坑所以…………………SICP的第一篇读书笔记可能要鸽很久很久啦（大概高三暑假）（你还真有脸说）当然习题还是会抽空刷的 在GitBook上不定期诈尸Exersices Solutions of SICP公开课也一直在刷 虽然每天看不到十分钟就要睡觉了orz 真紧张明天我的桌子和椅子就要参加高考了看了一下ZUI DAYS还有88天物竞还有131天选考还有365天高考时间有时候真是令人生厌 物理还是没有进150名不过暑假要去质心决赛班 终于可以亲眼见到蔡子星啦嘿嘿嘿我爱物理我爱物理我爱物理我爱物理我爱物理我爱物理我爱物理 物理免修后多出来五节自修课最近浪得很开心 刷刷题看看书泡泡实验室什么的但不知道为什么时间还是那么少 事情还是那么多 不知不觉扯了这么多orz 还是回归一下正题吧 人生中第一次在Github上写这么长的英文README人生中第一次Arduino写多文件模块化程序（没有用类啦因为觉得没必要orz） 这个项目史无前例地遇到了各种巨坑 坑多到报警到现在都还没有完全解决（大概也没空解决了呃） 其实本来这个项目是很宏大的 还计划了智能窗帘、智能橱柜、分布式传感器系统但因为人手和时间的原因 可能就只能这样了….创客空间也没几个人真正在做事情 无奈 这个项目目前已经参加了宁波中科院创客空间举办的比赛 相关参赛视频和链接什么的在文末 好了 接下来 我们谈谈各种坑 服务器部分来张（半）全家福从左下到右上分别是 ESP8266、MFRC522、Arduino Uno、Banana Pi 服务器部分我采用的是香蕉派（最经典的那款）（也就是最弱的那款）（连板载WiFi都没有）没错 就是这么简单的一个node应用 我都遇到了巨坑而且第一个坑就是在安装node上 首先说明 我用的系统是32位的Raspbian jessie for bananapi在安装之前 我就看见网上大佬们各种警告 不要用包管理器安装那好吧 那就下载源码编译吧可我万万没想到的是 我光make就花了整整一天的时间喵喵喵？？？更可怕的是 我make install了整整一天都没装上…..CPU一直跑在100%但我并不知道它到底在干啥 只能^C了最后 我是下载了别人编译好的二进制包才成功装了上去 第二个坑是对这次开发影响最小的但是让我感受到了绝望我本来想打算借着这个项目接触一下MongoDB于是我在开始做之前看了大半个月的教程和文档好了你们应该猜到什么了吧MongoDB只支持64位系统！！！这只香蕉派只有32位系统镜像！！！（至少我没找到64位）那好吧 我大半个月只能算白看了 毕竟再次应用肯定不知道要等到什么时候去到时候肯定早就忘了于是只能屈服于MySQL 安慰自己关系型数据库挺好的 稳定安全又好弄（雾） 第三个坑是一个十分naive的坑（咳）node和mysql连接的库只有英文文档 还写得有点乱糟糟的我修改了一下复制的示例 然后发现如果查询命中就没问题 但如果没有命中就会报错 直接退出当时以为是库的原因 没有命中就throw error然后就各种看文档和怀疑自己的英语水平直到我看见了if(err) throw err;……..于是我神经错乱到在回调函数外写了try-carch……….然后我看到了错误提示Cannot read property of undefined……………..我可能是要重新学一遍js总结： 类型检查一定要做 尤其是和数据库相关的时候 遇到错误千万要仔细读几遍 确定了错哪再去调bug不过这次是因为由于error是在回调函数里面被抛出 所以错误信息被模块又封装了一层所以特别不起眼orzzz 迈过了三座大坑 我写完了服务端但是 我万万没有想到的是 这还只是个开始…… 客户端部分MFRC522和ESP8266 调MFRC522一切顺利 用了@miguelbalboa的库谢天谢地 这是我最靠谱的时刻 然后就是ESP8266了 这家伙真我是见过的最难调的模块尤其是当你一开始没有开软串口来调试的时候（不要问我为什么不用软串口连ESP8266 软串口波特率最高只有9600…） 我这个项目是使用HTTP协议完成客户端和服务端的通信数据交换格式是json这也是我整个项目最作死的地方…… 数据只有十几二十字节 但加上了HTTP头瞬间变成了两百字节…然后Arduino就瞬间爆炸什么串口缓冲区溢出啦 内存不足啦 全都来了关键是这个错误没有报错一开始还意识不到 白做了很多debug尝试 第一个坑就是串口缓冲区溢出而且这个坑让我明白了 什么叫做为什么调通了程序都不知道自己做了什么操作 一开始我读取数据时 使用的函数大概是这样的 1234while (ESP8266.available() &gt; 0)&#123; msg += char(ESP8266.read()); delay(4);&#125; 然后一般只接收到70来个字节就收不到了（Arduino默认缓冲区只有64字节）很显然是缓冲区溢出了 但很神奇的是 我把缓冲区调大也并没有什么卵用 消息始终收不全尤其是当我把缓冲区调到256字节以上的时候 毛都收不到了……… 没办法 我只能从接收函数下手了我怀疑接收函数一个一个字节实在太慢了尤其还停顿了4毫秒（虽然我把delay注释了也读不全虽然会稍微好一点）然后我就看文档有没有直接收整个缓冲区的函数 于是我看到了readString虽然这个操作把我带向了另外一个深坑 于是我的接收函数就变成了这样 12345678910void ESP8266_ReadData(String&amp; temp, int delay_time = 4) &#123; #ifdef USE_DEBUG_MODE DEBUG.println("Reading data..."); #endif while(!ESP8266.available()); while(ESP8266.available())&#123; temp += ESP8266.readString(); delay(delay_time); &#125;&#125; 看上去非常正确是不是 可还是不行但当我把缓冲区调到128字节的时候就特喵的行了……work perfectly这让我很绝望….到底是为什么orz 第二个坑又是文档的问题我在用ArduinoJson库的时候 用了DynamicBuffer可谁知道DynamicBuffer是不会自动释放的……于是立马内存溢出 运行几轮后就程序错乱当时不是很肯定是ArduinoJson的问题而且我又看了两遍文档也注意到什么 直到我搜了Issue才解决只要把DynamicBuffer定义在全局就行了可这么重要的事情为什么就不能写在文档里呢要么是我太小白了？（非常有可能orz） 好了 来到最后一个巨坑 内！存！不！足！对这个巨坑 我想到的唯一办法就是上Arduino Mega2560实在解决不了了 为了解决第一个坑 我（迫不得已）用了String类（或者说只是因为懒而已String用起来好方便啊qwqqqq）然后？然后内存就炸了 虽然明明我删掉了所有调试信息后烧进去提示只占用了30%左右的内存可能我局部String用得实在太多了吧逼得我传String只能传引用（这才是正确的写法好吗直接返回String是真的非常小白的做法） 于是程序终于勉勉强强地跑起来了 但是接下来就是我最绝望的时刻因为这个程序 它不稳定不稳定到什么程度呢你完全不知道什么时候它是正常运行的有的时候完全没法用有的时候只能跑一轮两轮极少数时候能一直正常运行所以我按了无数遍的重启………最难受的是我还看不见调试信息 为了省内存…. 总结：没事别拿Uno折腾自己 该上Mega就果断上 不要和内存优化死磕 尤其是当你还在用String类的时候 其实还踩了很多很多小坑 但这篇充满吐槽风格的文章还是就到这吧已经毛4000字了….第一次一口气写这么多…. 好了 最后附点视频 调试信息还活着的时候拍的演示视频 最终的比赛视频 晚好2017/6/7 20:30LEAFERx]]></content>
  </entry>
  <entry>
    <title><![CDATA[Notes of SICP 0]]></title>
    <url>%2F2017%2F04%2F23%2FSICP-note-0%2F</url>
    <content type="text"><![CDATA[“世之奇伟、瑰怪、非常之观，常在于险远，而人之所罕至焉，故非有志者不能至也。”王安石《游褒禅山记》 这是《计算机程序的构造和解释》（Structure and Interpretation of Computer Programs）笔记系列的第0篇是的我终于来诈尸了 好久不见考完学考选考感觉自己像个废人 然后5.1物理省赛 最近是真的忙但梦想不能丢对吧 于是我打算开始了这本书的笔记（其实只是算法导论实在刷不下去了orzzz）这本书大概算是圈中公认的（至少是知乎qwq）一本计算机编程入门奇书书的内容按大佬们的说法是各种抽象概念和抽象方法 是一本讲述控制复杂度方法的入门书同按大佬的说法 阅读这本书的最终目的是抓住计算机中的神灵其实这本书我断断续续阅读了也大概有两个月了 算是勉强看完了前三章 虽然是按照阅读《xxx从入门到精通》的节奏所以决定痛改一下前非 认真地啃完这本书第0篇主要写一些准备内容吧比如环境搭建啊还有一些学习资源啊什么的嗯 算法导论再见好了以上是瞎吐槽 跳过就好顺便放张图 共勉 Introduction我用的是机械工业出版社和中信出版社出版的SICP中文译本豆瓣链接 带着崇敬和赞美，将本书献给活在计算机里的神灵。“我认为，在计算机科学中保持计算中的趣味性是特别重要的事情。这一学科在起步时包含着趣味性。当然，那些付钱的客户们时常觉得受了骗。一段时 间之后，我们开始严肃地看待他们的抱怨。我们开始感觉到，自己真的像是要负起成功地、无差错地、完美地使用这些机器的责任。我不认为我们可以做到这些。我 认为我们的责任是拓展这一领域，将其发展到新的方向，并在自己的家里保持趣味性。我希望计算机科学的领域绝不要丧失其趣味意识。最重要的是，我希望我们不 要变成传道士，不要认为你是兜售圣经的人，世界上这种人已经太多了。你所知道的有关有关计算的东西，其他人也都能学到。绝不要认为似乎成功计算的钥匙就掌 握在你的手里。你所掌握的，也是我认为并希望的，也就是智慧：那种看到这一机器比你第一次站在它面前时能做得更多的能力，这样你才能将它向前推进。”Alan J. Perlis 目录构成： 构造过程抽象（Building Abstractions with Procedures） 构造数据抽象（Building Abstractions with Data） 模块化、对象和状态（Modularity, Objects, and State） 元语言抽象（Meta-Linguistic Abstraction） 寄存器机器里的计算（Register Machine’ Model of Control） Environment我使用Racket 6.8 64位作为实验和习题环境Racket的安装包可以在Racket官网获得安装完后 可以使用由Neil大佬提供的SICP语言包进行编程（Racket看上去是一个很好玩的语言平台 有空可以去深入一下）（好吧我其实只是实在搞不懂MIT-GNU Scheme…）安装SICP语言包的方法： 打开DrRacket 在上方编辑框内将 #lang racket 改为 #lang planet neil/sicp 并点上方Run 等下载好安装好后 重启DrRacket 点击上方菜单栏 Language =&gt; Choose language… =&gt; Teaching Languagues 选择下方的SICP 然后点OK 完成 会看到下方编辑框显示：Language: SICP (PLaneT 1.18); memory limit: xxx MB. 如果没有请点一下Run或者重启 接下来就可以在下方编辑框编写程序了 ResourcesMIT公开课（英文）MIT公开课视频翻译项目北大课程资料（使用SICP作为课本）知乎问题：《计算机程序的构造和解释（SICP）》讨论的核心问题是什么？还有许多大佬的笔记 搜索关键词：SICP 笔记 就行]]></content>
      <categories>
        <category>Notes of SICP</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>编程</tag>
        <tag>学习</tag>
        <tag>计算机程序的构造和解释</tag>
        <tag>SICP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在移动设备下启用NexT主题的目录页面和回到顶部按钮]]></title>
    <url>%2F2017%2F02%2F05%2FEnableTOConMobile%2F</url>
    <content type="text"><![CDATA[其实就是改写一下css 个人觉得在移动端还是比较需要目录的主要涉及/themes/next/source/css/_common/components/sidebar/目录下文件的修改效果可见本博客移动端页面 Step 0确保你拥有一个以NexT为主题的Hexo博客 版本大概任意orz Step 1使用文本编辑器打开/themes/next/source/css/_common/components/sidebar/sidebar.styl在.sidebar下将+tablet()和+mobile()注释掉123456/*+tablet() &#123; display: none !important; &#125; +mobile() &#123; display: none !important; &#125;*/ Step 2在移动端启用目录按钮使用文本编辑器打开/themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl在.sidebar-toggle下将+tablet()和+mobile()注释掉即可为了适配移动端，我微调了部分css如下：12345678910111213141516+tablet() &#123; right: 20px; bottom: 45px; //微调位置 -moz-opacity: 0.8; -khtml-opacity: 0.8; opacity: 0.8; //增加透明效果 /*display: none;*/&#125;+mobile() &#123; right: 20px; bottom: 45px; //微调位置 -moz-opacity: 0.8; -khtml-opacity: 0.8; opacity: 0.8; //增加透明效果 /*display: none;*/&#125; Step 3在移动端启用回到顶部按钮使用文本编辑器打开/themes/next/source/css/_common/components/back-to-top.styl在.back-to-top下将部分代码修改如下：1234567891011121314+mobile() &#123; right: 20px; -moz-opacity: 0.8; -khtml-opacity: 0.8; opacity: 0.8; /*display: none;*/&#125;+tablet() &#123; right: 20px; -moz-opacity: 0.8; -khtml-opacity: 0.8; opacity: 0.8; /*display: none;*/&#125; 完成 *注：个人预计在小屏移动端可能会出现适配不良的情况；以及友链较多的博客慎用，可能会产生向下溢出？]]></content>
      <categories>
        <category>Hexo折腾</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
        <tag>教程</tag>
        <tag>美化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在NexT主题底部小心心增加点击动画功能]]></title>
    <url>%2F2017%2F01%2F30%2FBottomheart%2F</url>
    <content type="text"><![CDATA[给你NexT主题的Hexo博客底部的小心心增加一点乐趣！效果如图仅需3分钟！ Step 0确保你拥有一个以NexT为主题的Hexo博客 版本大概任意orz Step 1下载hexo-next-bottomheart.js（可以把链接复制到下载工具中或者直接新建文件然后复制粘贴），并把它保存在/themes/next/source/js/src/目录下。 Step 2使用文本编辑器打开/themes/next/layout/_layout.swig在尾部&lt;/body&gt;上方新增一行（line 5），修改后的文件如下12345678...&#123;% include '_components/algolia-search/assets.swig' %&#125; &lt;script type="text/javascript" src="/js/src/hexo-next-bottomheart.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; Step 3使用文本编辑器打开/themes/next/layout/_partials/footer.swig在123456789...&lt;span itemprop="copyrightYear"&gt;&#123;&#123; current &#125;&#125;&lt;/span&gt;&lt;span class="with-love"&gt; &lt;i class="fa fa-&#123;&#123; theme.authoricon &#125;&#125;"&gt;&lt;/i&gt;&lt;/span&gt;&lt;span class="author" itemprop="copyrightHolder"&gt;&#123;&#123; config.author &#125;&#125;&lt;/span&gt;... 处，修改line 5为1&lt;div id="bottomheart" style="cursor:pointer;"&gt;&lt;i class="fa fa-&#123;&#123; theme.authoricon &#125;&#125;"&gt;&lt;/i&gt;&lt;/div&gt; 这时候，重新部署你的博客，就可以疯狂点击小心心啦 Step 4由于频繁点击小心心会造成周围文字不断被选中强迫症表示非常难受，所以修改css使用文本编辑器打开/themes/next/layout/_partials/footer.swig在.footer类中加入如下规则12345-moz-user-select: none;-webkit-user-select: none;-ms-user-select: none;-khtml-user-select: none;user-select: none; 这样就全部完成啦 To Do有空会增加配合Leancloud实现点击计数功能并更新教程，这样大家就可以知道有没有人又在偷偷给你点赞啦 *注：js文件来自ehlxr并由我进行一些修改，在此对他表示感谢]]></content>
      <categories>
        <category>Hexo折腾</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>博客</tag>
        <tag>教程</tag>
        <tag>美化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[书单 / BookList]]></title>
    <url>%2F2017%2F01%2F27%2FBooks%2F</url>
    <content type="text"><![CDATA[会频繁持续更新！！！会频繁持续更新！！！会频繁持续更新！！！也会逐渐补上一些以前看的书，时间记不清那也就随便写啦格式为：[入手时间] + [书名] + [作者] + [推荐人(可能会写)]点击书名会进入这本书的豆瓣页面手机党戳右下角的悬浮按钮可以打开目录 较早期的书本日期统一注为2015.01 专业向计算机 2017.11 JavaScript设计模式 [美] Addy Osmani 2017.08 编码：隐匿在计算机软硬件背后的语言 [美] Charles Petzold 2017.04 Web全栈工程师的自我修养 余果 2017.02 精通Linux（第2版） [美] Brian Ward 2017.02 深入理解JavaScript [美] Axel Rauschmayer 2017.02 Raspberry Pi快速入门指南 [美] Maik Schmidt 2017.01 计算机程序的构造和解释 [美] Harold Abelson等 2016.10 啊哈！算法 啊哈磊 2016.09 图解密码技术（第3版） [日] 结城浩 2015.11 算法导论 [美] Thomas H.Cormen等 2015.09 算法竞赛入门经典（第2版） 刘汝佳 2015.09 算法竞赛入门经典：训练指南 刘汝佳 2015.09 爱上Arduino：学Arduino玩转Kinect制作项目 Enrique Ramos Melgar等 2015.01 妙趣横生的算法 杨峰 2015.01 Arduino高级开发权威指南 [美] Steven F.Barrett 2015.01 CSS高效开发实战 谢郁 2015.01 Arduino晋级应用指南 [美] Emery Premeaux 2015.01 jQuery权威指南(第2版) 陶国荣 2015.01 Arduino魔法书 [美] Jeremy Blum 2015.01 AVR单片机入门与速成攻略 高显生 9787111461555 数学 2017.04 线性代数 [美] Steven J. Leon 2016.03 散度、旋度、梯度释义（图解版） [美] Schey, H.M. 2016.02 离散数学 许克祥等 9787512415942 2015.01 数学建模（原书第5版） [美] Frank R. Giordano等 2015.01 我怎样解题 单墫 2015.01 初等数论 陈景润 物理 2017.08 数学物理方法 [德] 顾樵 2017.08 Introduction to Electrodynamics (3rd Edition) [美] David J. Griffiths 2017.04 力学 [俄] П.Д.朗道 2017.04 经典力学 沈惠川 2015.11 费恩曼物理学讲义（第1卷） [美] R.P.Feynman 2015.11 费恩曼物理学讲义（第2卷） [美] R.P.Feynman 2015.11 费恩曼物理学讲义（第3卷） [美] R.P.Feynman 2015.04 电路 邱关源等 2015.01 狭义与广义相对论浅说 [美] 爱因斯坦 化学 2015.11 无机化学（第三版）上册 武汉大学 / 吉林大学 2015.11 无机化学（第三版）下册 武汉大学 / 吉林大学 其他 2017.04 Cinema 4D完全学习手册 TVart培训基地 非专业向科普向 2017.04 费曼讲演录 [美] 理查德·费曼 2017.04 度量 [美] 保罗·洛克哈特 2017.04 希格斯粒子是如何找到的 [英] 乔恩·巴特沃思 2017.02 爱与数学 [美] Edward Frenkel 2017.01 程序是怎样跑起来的 [日] 矢泽久雄 2017.01 计算机是怎样跑起来的 [日] 矢泽久雄 2016.10 七堂极简物理课 [意] 卡洛·罗韦利 2016.07 强力与弱力 [日] 大栗博司 2016.07 庞加莱猜想 [日] 春日真人 2016.05 超弦理论 [日] 大栗博司 2016.03 《三体》中的物理学 李淼 2016.02 巫师、外星人和星舰 [美] Charles L. Adler 2016.02 Microcosmos [德] Harald Fritzsch 2015.03 理解科学丛书 （截止至2017年1月28日共有11册） 2015.03 无穷的开始 [英] David Deutsch 2015.01 电子，电子！谁来拯救摩尔定律？ 张天蓉 2015.01 光影世界：电影中的物理学 李耀俊 2015.01 电的旅程 探索人类驾驭电子的历史过程 张大凯 2015.01 平面宇宙 [美] A. K. 杜德尼 2015.01 反欺骗的艺术 [美] 米特尼克 2015.01 寻找薛定谔的猫 [英] John Gribbin 2015.01 悖论：破解科学史上最复杂的9大谜团 [英] Jim Al-Khalili 2015.01 生活中的概率趣事 [瑞典] Peter Olofsson 2015.01 反入侵的艺术——黑客入侵背后的真实故事 [美] 米特尼克等 2015.01 欲望都市数学版：城市生活中的数学建模 [美] John A. Adam 2015.01 化学元素之旅 [美] Tom Jackson 社科文学向 2017.12 天真的人类学家 [英] 奈吉尔·巴利 2017.12 导读弗洛伊德 [英] 帕梅拉·瑟齐韦尔 2017.12 文学阅读指南 [英] 特里·伊格尔顿 2017.12 诗的八堂课 江弱水 2017.12 古代汉语常识 王力 2017.01 斯坦福极简经济学 [美] 蒂莫西‧泰勒 2017.01 乌合之众：大众心理研究 [法] Gustave Le Bon 2015.01 查拉图斯特拉如是说 [德] Friedrich Nietzsche 2015.01 莱布尼茨不是黄油饼干 [德] 米歇尔·施密特-所罗门等 2015.01 生命之轮 [美] 伊丽莎白·库伯勒-罗斯等 2015.01 哲学的门槛 [英] 奈杰尔·沃伯顿 2015.01 一战简史 [英]诺曼·斯通 艺术向 2016.05 设计中的设计 [日] 原研哉 2015.05 超越平凡的平面设计 [美] John McWade 2015.05 写给大家看的设计书（第3版） [美] Robin Williams 诗 2017.03 云雀叫了一整天 木心 2017.01 西班牙三棵树 木心 2016.09 面朝大海 春暖花开 海子 2016.04 设计诗 朱赢椿 2015.01 暴风雨使我安睡 顾城 2015.01 我会像青草一样呼吸 顾城 2015.01 走了一万一千里路 顾城 影集 2015.03 南法航线 Pano 2015.01 我爱这哭不出来的浪漫 严明 2015.01 尔本 安东尼 散文杂文 2017.12 野草 鲁迅 2017.09 人间草木 汪曾祺 2017.04 沉默的大多数 王小波 2017.04 自由的夜行 史铁生 2017.01 皮囊 蔡崇达 2017.01 黑客与画家 [美] Paul Graham 2017.01 论摄影 [美] 苏珊·桑塔格 2016.10 我的精神家园 王小波 2016.05 我们仨 杨绛先生 2016.05 最糟的宇宙，最好的地球 刘慈欣 2016.02 橙 安东尼 2016.01 红 安东尼 2015.03 痕记 痕痕 2015.03 目送 龙应台 2015.01 愿风裁尘 郭敬明 2015.01 怀石逾沙 郭敬明 2015.01 守岁白驹 郭敬明 2015.01 常识 梁文道 2015.01 不辩，是一种智慧 林清玄 2015.01 眠空 安妮宝贝 2015.01 告白与告别 韩寒 2015.01 通稿二零零三 韩寒 2015.01 万万没想到 有时右逝等 小说 2018.01 围城 钱锺书 2018.01 苦妓回忆录 [哥伦比亚] 加西亚·马尔克斯 2018.01 世界尽头与冷酷仙境 [日] 村上春树 2018.01 刀锋 [英] 毛姆 2018.01 爱情和其他魔鬼 [哥伦比亚] 加西亚·马尔克斯 2018.01 第二十二条军规 [美] 约瑟夫·海勒 2017.12 远山淡影 [英] 石黑一雄 2017.11 手机 [美] 斯蒂芬·金 2017.11 仿生人会梦见电子羊吗？ [美] 菲利普·迪克 2017.11 天使与魔鬼 [美] 丹·布朗 2017.09 不存在的骑士 [意] 伊塔洛·卡尔维诺 2017.09 达·芬奇密码 [美] 丹·布朗 2017.09 我们 [俄] 尤金·扎米亚金 2017.08 国王与抒情诗 李宏伟 2017.08 一桩事先张扬的凶杀案 [哥伦比亚] 加西亚·马尔克斯 2017.08 分成两半的子爵 [意] 伊塔洛·卡尔维诺 2017.08 美丽新世界 [英] 阿道司·赫胥黎 2017.06 罗生门 [日] 芥川龙之介 2017.06 没有色彩的多崎作和他的巡礼之年 [日] 村上春树 2017.04 1Q84 BOOK 3 [日] 村上春树 2017.02 你好，旧时光 八月长安 2017.02 暗恋·橘生淮南 八月长安 2017.02 最好的我们 八月长安 2017.01 蝇王 [英] William Golding 2017.01 局外人 [法] Albert Camus 2015.01 小王子 [法] 安托万·德·圣埃克苏佩里 2016.10 套中人 [俄] 契诃夫 2016.10 1Q84 BOOK 1 [日] 村上春树 2016.10 1Q84 BOOK 2 [日] 村上春树 2016.09 动物庄园 [英] George Orwell 2016.09 麦田里的守望者 [美] J.D.塞林格 2016.07 失乐园 [日] 渡边淳一 2016.07 发条橙 [英] Anthony Burgess 2016.05 悖论13 [日] 东野圭吾 2016.04 天空之蜂 [日] 东野圭吾 2016.04 嫌疑人X的献身 [日] 东野圭吾 2016.04 岛 [英] 维多利亚·希斯洛普 2016.04 红玫瑰与白玫瑰 张爱玲 2016.04 十字弓·玫瑰之刃 恒殊 2016.04 十字弓·背叛者月 恒殊 2016.04 十字弓·亡者归来 恒殊 2016.02 梦之海 刘慈欣 2015.03 挪威的森林 [日] 村上春树 2015.03 在逃 王若虚 2015.03 桥声 吴忠全 2015.03 第七天 余华 2015.01 星际迷航-红衫 [美] John Scalzi 2015.01 1988：我想和这个世界谈谈 韩寒 2015.01 倾城之恋 张爱玲 2015.01 慢 [法] 米兰·昆德拉 2015.01 一粒红尘 独木舟 2015.01 牧羊少年奇幻之旅 [巴西]保罗·柯艾略 2015.01 胡萝卜须 [法] 儒勒·列那尔 2015.01 欧叶妮·葛朗台 [法] 巴尔扎克 2015.01 最后一课 [法] 都德 2015.01 羊脂球 [法] 莫泊桑 2015.01 从你的全世界路过 张嘉佳 2015.01 杀死一只知更鸟 [美] 哈珀·李 2015.01 神曲 但丁 2015.01 1984 [英] George Orwell 2015.01 穹顶之下·危机卷 刘慈欣等 2015.01 穹顶之下·末日卷 刘慈欣等 2015.01 三体 刘慈欣 传记 2017.08 特斯拉：电气时代的开创者 [美] W.伯纳德·卡尔森 2016.12 硅谷钢铁侠 [美] Ashlee Vance 2015.05 乔纳森传 [美] Leander Kahney 2015.05 与自己对话 [南非] Nelson Mandela 2015.01 小QQ大帝国 熊江]]></content>
  </entry>
  <entry>
    <title><![CDATA[序 / INTRO]]></title>
    <url>%2F2017%2F01%2F16%2FHello-World%2F</url>
    <content type="text"><![CDATA[在现实断裂的地方梦 汇成了海 顾城 《弥合》 所以你好 欢迎来到LEAFER x LAB这是我的博客 主要写一些技术类的文章当然 可能还会放一些自己的作品那么请持续关注啦比心 关于我咸鱼一只，仍旧挣扎在高考的滚滚浪潮之下，是物竞党 + NOIP蒟蒻。喜欢编程，喜欢设计，喜欢尝试各种新奇好玩的东西。喜欢书，喜欢诗和奇奇怪怪的科普。喜欢明信片，喜欢吃。觉得自己应该是一只有趣的咸鱼。 关于这个博客由于各种时间不够，所以大概高考前就都只能不定期诈尸啦。但是一旦闲下来就会频繁诈尸哦。所以请多多关注啦。 关于文章转载和其他如果没有特殊说明 本站所有文章均采用 CC BY-NC-SA 4.0 CN 许可协议转载请注明作者并最好附带原文链接哦顺便如果喜欢我的博客 欢迎友链ww 最后那么，送上一首Alan Pownall的Colourful Day。请多多指教啦。 浏览器不支持audio标签]]></content>
  </entry>
</search>
